import matplotlib.pyplot as plt
import numpy as np
from scipy.interpolate import interp1d

# Значения Betta coefficient по оси x
betta_coefficient = [1e-06, 0.005001, 0.010001, 0.015001, 0.020001, 0.025001, 0.030001, 0.035001, 0.040001, 0.045001, 0.050001, 0.055001, 0.060001, 0.065001, 0.070001, 0.075001, 0.080001, 0.085001, 0.090001, 0.095001, 0.100001, 0.105001, 0.110001, 0.115001, 0.120001, 0.125001, 0.130001, 0.135001, 0.140001, 0.145001, 0.150001, 0.155001, 0.160001, 0.165001, 0.170001, 0.175001, 0.180001, 0.185001, 0.190001, 0.195001, 0.200001, 0.205001, 0.210001, 0.215001, 0.220001, 0.225001, 0.230001, 0.235001, 0.240001, 0.245001, 0.250001, 0.255001, 0.260001, 0.265001, 0.270001, 0.275001, 0.280001, 0.285001, 0.290001, 0.295001, 0.300001, 0.305001, 0.310001, 0.315001, 0.320001, 0.325001, 0.330001, 0.335001, 0.340001, 0.345001, 0.350001, 0.355001, 0.360001, 0.365001, 0.370001, 0.375001, 0.380001, 0.385001, 0.390001, 0.395001, 0.400001, 0.405001, 0.410001, 0.415001, 0.420001, 0.425001, 0.430001, 0.435001, 0.440001, 0.445001, 0.450001, 0.455001, 0.460001, 0.465001, 0.470001, 0.475001, 0.480001, 0.485001, 0.490001, 0.495001]

# Значения Energy outflow по оси y
energy_outflow = [86.8058, 86.7979, 86.79, 86.7821, 86.7741, 86.766, 86.7579, 86.7498, 86.7416, 86.7334, 86.7252, 86.7169, 86.7086, 86.7002, 86.6918, 86.6833, 86.6748, 86.6663, 86.6577, 86.649, 86.6403, 86.6316, 86.6228, 86.614, 86.6051, 86.5962, 86.5872, 86.5782, 86.5692, 86.5601, 86.5509, 86.5417, 86.5324, 86.5231, 86.5137, 86.5043, 86.4949, 86.4854, 86.4758, 86.4662, 86.4565, 86.4468, 86.437, 86.4271, 86.4172, 86.4073, 86.3973, 86.3872, 86.3771, 86.3669, 86.3567, 86.3464, 86.336, 86.3256, 86.3151, 86.3046, 86.294, 86.2833, 86.2726, 86.2618, 86.251, 86.2401, 86.2291, 86.2181, 86.207, 86.1958, 86.1846, 86.1732, 86.1619, 86.1504, 86.1389, 86.1273, 86.1157, 86.104, 86.0922, 86.0803, 86.0683, 86.0563, 86.0442, 86.0321, 86.0198, 86.0075, 85.9951, 85.9826, 85.9701, 85.9574, 85.9447, 85.9319, 85.9191, 85.9061, 85.8931, 85.8799, 85.8667, 85.8534, 85.84, 85.8266, 85.813, 85.7993, 85.7856, 85.7718]

# Построение графика аппроксимации
plt.plot(betta_coefficient, energy_outflow, color='blue', linestyle='-')

# Настройка заголовка и осей
plt.title('Energy Outflow vs Betta Coefficient')
plt.xlabel('Betta Coefficient')
plt.ylabel('Energy Outflow')

# Отображение сетки на графике
plt.grid(True)

# Отображение графика
plt.show()

# Значения Gamma coefficient по оси x
gamma_coefficient = [0.001, 0.01, 0.1, 1, 10, 100]

# Значения Energy outflow по оси y
energy_outflow = [75.8701, 75.8771, 75.9473, 76.6486, 83.6619, 153.795]

# Интерполяция
f = interp1d(gamma_coefficient, energy_outflow, kind='cubic')
gamma_range = np.linspace(0.001, 100, 100)  # задаем диапазон значений gamma coefficient для интерполяции
plt.plot(gamma_range, f(gamma_range), color='green', linestyle='-')

# Настройка заголовка и осей
plt.title('Energy Outflow vs Gamma Coefficient')
plt.xlabel('Gamma Coefficient')
plt.ylabel('Energy Outflow')

# Установка логарифмической шкалы по оси x
plt.xscale('log')

# Отображение сетки на графике
plt.grid(True)

# Отображение графика
plt.show()